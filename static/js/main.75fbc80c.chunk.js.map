{"version":3,"sources":["Shared/utility.ts","rdx/createAdmin/createAdminActions.ts","rdx/userLogin/userLoginActions.ts","Components/AddUser/Components/AddUserDialog/validateDialogInputs.ts","Components/AddUser/Components/AddUserDialog/AddUserDialog.tsx","Components/AddUser/AddUser.tsx","Components/LoginError/LoginError.tsx","Components/UsersList/UsersList.tsx","Components/TestCell/TestCell.tsx","Components/RenderUserPosts/RenderUserPosts.tsx","Components/ShowUserTests/UserTestsAcc/AccItem/TestsChart/TestsChart.tsx","Assets/table.svg","Assets/chart.svg","Components/ShowUserTests/UserTestsAcc/AccItem/TestsListTable/TestsListTable.tsx","Components/ShowUserTests/UserTestsAcc/AccItem/AccItem.tsx","Components/ShowUserTests/UserTestsAcc/UserTestsAcc.tsx","Containers/Login/Login.tsx","Screens/LoginScreen/LoginScreen.tsx","Layout/CenterContent.tsx","Layout/MainContainer.tsx","rdx/users/usersActions.ts","Containers/Users/Users.tsx","rdx/getTests/getTestsACctions.ts","Containers/UserTestsById/UserTestsById.tsx","Containers/AdminDashboard/AdminDashboard.tsx","fbConfig.ts","UI/LogoutBtn/LogoutBtn.tsx","Screens/AdminScreen/AdminScreen.tsx","Screens/TestsScreen/TestsScreen.tsx","rdx/passTest/passTestActions.ts","testsData/deprBeka.ts","testsData/trevBeka.ts","testsData/beznadBeka.ts","HOC/passTestWithDb.tsx","Containers/PassTest/PassTest.tsx","Containers/ShowUserPosts/ShowUserPosts.tsx","Containers/AppTests/TrevogiBeka/Cell/Cell.tsx","Containers/AppTests/TrevogiBeka/TrevogiBeka.tsx","Containers/AppTests/BeznadBeka/BeznadBeka.tsx","Containers/UserDashboard/UserDashboard.tsx","Screens/UserScreen/UserScreen.tsx","Containers/Entry/Entry.tsx","rdx/createAdmin/createAdminReducer.ts","api/createAdmin.ts","rdx/createAdmin/createAdminSagas.ts","rdx/userLogin/userLoginReducer.ts","api/login.ts","rdx/userLogin/userLoginSaga.ts","rdx/authState/authStateActions.ts","rdx/authState/authStateReducer.ts","rdx/authState/autStateSaga.ts","rdx/users/usersSaga.ts","rdx/users/usersReducer.ts","api/sendTest.ts","rdx/passTest/passTestSaga.ts","rdx/passTest/passTestReducer.ts","rdx/getTests/getTestsReducer.ts","api/getUserTests.ts","rdx/getTests/getTestsSaga.ts","rdx/store.ts","App.tsx","index.tsx"],"names":["checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","isPassword","createAdmin","createAction","createAdminFailed","createAdminSuccess","userLoggedIn","userLoggedInSuccess","userLoggedInFailed","setError","oldErrObj","type","msg","Object","assign","useStyles","makeStyles","root","marginBottom","AddUserDialog","toggleDialogClose","open","classes","useState","error","emailRef","useRef","passwordRef","nameRef","commentRef","commitHandler","email","current","password","name","comment","errResult","errors","validateDialogInputs","keys","firebase","functions","httpsCallable","adduser","displayName","Dialog","onClose","DialogTitle","id","DialogContent","TextField","className","label","fullWidth","inputRef","helperText","multiline","DialogActions","Button","onClick","variant","color","AddUser","setOpen","endIcon","LoginError","errMsg","Box","display","justifyContent","py","Typography","align","UsersList","users","TableContainer","component","Paper","style","Table","TableHead","TableRow","TableCell","TableBody","map","key","Link","RouterLink","to","groupWrapper","border","grey","borderRadius","radioItem","borderRight","props","media","borderBottom","width","alignItems","padding","cursor","input","background","green","transition","TestCell","React","memo","itemVals","itemNum","onChange","matchesDown600","useMediaQuery","changeHandler","evt","val","target","Grid","container","direction","item","xs","sm","htmlFor","theme","createStyles","tbFS","breakpoints","down","fontSize","table","maxWidth","CustomTooltip","payload","active","chartData","tooltipData","find","date","backgroundColor","try","dataItem","hour","min","result","TestsChart","reducedChrtData","data","dateInst","Date","getDate","getMonth","getFullYear","getHours","getMinutes","reduce","resArr","currObj","inSameDay","findIndex","push","overflowX","height","margin","top","right","bottom","left","dataKey","arg","stroke","strokeDasharray","content","_extends","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","cx","cy","r","_ref","svgRef","title","enableBackground","viewBox","ref","ForwardRef","forwardRef","x","y","xmlSpace","TestsListTable","testData","size","dateFormatted","toLocaleString","year","month","day","weekday","timeZone","minute","second","useSyles","details","flexDirection","icnsBox","borderTop","AccItem","accItemData","displayState","setDisplayState","changeView","view","Accordion","AccordionSummary","expandIcon","AccordionDetails","mb","IconButton","marginRight","reverse","UserTestsAcc","entries","mapDispatchToProps","adminCreateActions","signin","RawLogin","state","inputs","validation","valid","onChangeField","event","setState","prevState","onSubmitHandler","preventDefault","isEmailValid","isPasswordValid","tabId","isValidEmail","isValidPass","creatingInProgress","creationInProgress","autoComplete","onSubmit","inputProps","form","autocomplete","CircularProgress","message","Component","Login","connect","ownProps","isCreating","userLogin","userisLogging","userLoinError","LoginScreen","tabState","tabChangeHandler","newValue","justify","lg","md","AppBar","position","Tabs","aria-label","Tab","p","pt","CenterContent","children","MainContainer","Container","paddingTop","subscribeUC","unsubscrUC","recieveUCData","mapDispatchtoProps","RawUsers","usersData","PureComponent","Users","getTestsStart","getTestsSuccess","getTestsError","RawUserTestsById","uid","testsReqData","isRequesting","preparedData","idName","sort","a","b","legen","UserTestsById","userTests","userId","AdminDashboard","exact","path","render","match","params","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","firestore","LogoutBtn","signOut","window","location","replace","userEmail","logoutBtn","marginLeft","AdminScreen","useSelector","user","Toolbar","flexGrow","TestsScreen","spacing","Card","CardContent","CardActions","sendTestStart","sendTestSuccess","sendTestErr","sendTestClearStatus","deprBeka","testTitle","idTitle","instruction","items","item1","var1","var2","var3","var4","item2","item3","item4","item5","item6","item7","item8","item9","item10","item11","item12","item13","item14","item15","item16","item17","item18","item19","item20","item21","mapping","trevBeka","question","vars","beznadBeka","q1","assertion","weightVariant","q2","q3","q4","q5","q6","q7","q8","q9","q10","q11","q12","q13","q14","q15","q16","q17","q18","q19","q20","passTestWithDb","dispatch","useDispatch","sending","passTest","inProgress","sendStatus","status","testType","onReady","testIdName","testValue","dataToSend","toString","onExit","PassTest","testProps","onChangehandler","onReadyHandler","resultVal","values","parseInt","Error","e","itemsKeys","forEach","itemKey","elevation","lightGreen","fontWeight","disabled","RawShowUserPosts","ShowUserPosts","Cell","Divider","TrevogiBeka","tdItems","setTest","setIsValid","useEffect","testStateItems","cardContainer","LinearProgressWithLabel","mr","LinearProgress","minWidth","total","BeznadBeka","Array","fill","testState","setTestState","currStep","setCurrStep","dataAsArray","filled","setFilled","testPassed","setTestPassed","turning","setTurning","onChooseHandler","newTestState","setTimeout","Math","round","res","curr","UserDashboard","UserScreen","getUser","isCheckingState","isChecking","Entry","admin","createAdminReducer","createReducer","actions","action","createAdminWithEmailAndPassword","credentials","signInWithEmailAndPassword","signInResult","createAdminSaga","put","takeEvery","userLoginReducer","loginAdminWithEmailAndPassword","logInUser","userLoginSaga","authChange","authStateReducer","watchForFirebaseAuth","getAuthChannel","eventChannel","emit","onAuthStateChanged","getIdTokenResult","then","idTokenResult","claims","channel","take","uCSync","watchUsersSnapshot","getSnapshotChannell","emitter","collection","where","currentUser","onSnapshot","snapshot","posts","docs","doc","subscription","cancelled","close","fork","uCSyncTask","cancel","usersReducer","_","sendTest","add","sendTestData","watchSendTest","takeLatest","passTestReducer","getTestsReducer","getUserTests","get","response","getTests","watchGetTests","rootSaga","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","middleware","run","App","CssBaseline","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.75fbc80c.chunk.js","sourcesContent":["export const checkValidity = ( value: string, rules: ValidationRules ) => {\r\n  let isValid = true;\r\n  if ( !rules ) {\r\n      return true;\r\n  }\r\n\r\n  if ( rules.required ) {\r\n      isValid = value.trim() !== '' && isValid;\r\n  }\r\n\r\n  if ( rules.minLength ) {\r\n      isValid = value.length >= rules.minLength && isValid\r\n  }\r\n\r\n  if ( rules.maxLength ) {\r\n      isValid = value.length <= rules.maxLength && isValid\r\n  }\r\n\r\n  if ( rules.isEmail ) {\r\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n      isValid = pattern.test( value ) && isValid\r\n  }\r\n\r\n  if (rules.isPassword) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+/g;\r\n    isValid = pattern.test( value ) && isValid;\r\n  }\r\n\r\n  // if ( rules.isNumeric ) {\r\n  //     const pattern = /^\\d+$/;\r\n  //     isValid = pattern.test( value ) && isValid\r\n  // }\r\n\r\n  return isValid;\r\n}\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const createAdmin = createAction<UserCredentials>(\"CREATE_ADMIN_START\");\r\n\r\nexport const createAdminFailed = createAction<any>(\"CREATE_ADMIN_ERROR\");\r\n\r\nexport const createAdminSuccess = createAction(\"CREATE_ADMIN_SICCESS\");","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const userLoggedIn = createAction<UserCredentials>(\"USER_LOGGED_IN\");\r\n\r\nexport const userLoggedInSuccess = createAction(\"USER_LOGGED_IN_SUCCESS\");\r\n\r\nexport const userLoggedInFailed = createAction<userLoginErr>(\"USER_LOGGED_IN_FAILED\");\r\n\r\nexport const userLoggedOut = createAction(\"USER_LOGGED_OUT\");","interface DialogErrDescr {\r\n  msg: string;\r\n}\r\n\r\nexport interface IDialogError {\r\n  email?: DialogErrDescr;\r\n  password?: DialogErrDescr;\r\n}\r\n\r\nexport const validateDialogInputs = (\r\n  email: string,\r\n  password: string\r\n): IDialogError => {\r\n  let errors: IDialogError = {};\r\n\r\n  if (email.length === 0) {\r\n    errors = setError(errors, \"email\", \"Поле обязательно\");\r\n  }\r\n\r\n  if (password.length === 0) {\r\n    errors = setError(errors, \"password\", \"Поле обязательно\");\r\n  }\r\n\r\n  if (password.length < 6) {\r\n    errors = setError(errors, \"password\", \"Минимум 6 символов\");\r\n  }\r\n\r\n  if (password.length >= 6) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+/g;\r\n    if (!pattern.test( password )) {\r\n      errors = setError(errors, \"password\", \"Только латинские символы\");\r\n    }\r\n  }\r\n\r\n  if ( email.length !== 0 ) {\r\n    const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n    if (!pattern.test( email )) {\r\n      errors = setError(errors, \"email\", \"Неверный формат почты\");\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nconst setError = (oldErrObj: IDialogError, type: string, msg: string): IDialogError => {\r\n  return Object.assign({}, oldErrObj, {\r\n    [type]: msg\r\n  });\r\n}","import React, { FC, useRef, useState } from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { validateDialogInputs, IDialogError } from \"./validateDialogInputs\";\r\nimport firebase from \"firebase/app\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: \"20px\"\r\n  }\r\n});\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  toggleDialogClose: () => void;\r\n}\r\n\r\nexport const AddUserDialog: FC<Props> = ({\r\n  toggleDialogClose,\r\n  open\r\n}) => {\r\n  const classes = useStyles();\r\n  const [error, setError] = useState<IDialogError>({});\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n  const nameRef = useRef<HTMLInputElement>(null);\r\n  const commentRef = useRef<HTMLInputElement>(null);\r\n\r\n  const commitHandler = () => {\r\n    const email = emailRef.current!.value;\r\n    const password = passwordRef.current!.value;\r\n    const name = nameRef.current!.value;\r\n    const comment = commentRef.current!.value;\r\n\r\n    const errResult = validateDialogInputs(email, password);\r\n\r\n    if (Object.keys(errResult).length > 0) {\r\n      setError(errResult);\r\n    } else {\r\n      setError({});\r\n      const adduser = firebase.functions().httpsCallable(\"createUser\");\r\n      adduser({\r\n        email,\r\n        password,\r\n        displayName: name,\r\n        comment\r\n      });\r\n      toggleDialogClose();\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={toggleDialogClose}>\r\n      <DialogTitle id=\"form-dialog-add-user\">Добавить пользователя</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          className={classes.root}\r\n          id=\"add-user-email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          fullWidth\r\n          required\r\n          inputRef={emailRef}\r\n          error={\"email\" in error}\r\n          helperText={error.email}\r\n        />\r\n        <TextField\r\n        className={classes.root}\r\n          id=\"add-user-password\"\r\n          label=\"Пароль\"\r\n          type=\"text\"\r\n          fullWidth\r\n          required\r\n          inputRef={passwordRef}\r\n          error={\"password\" in error}\r\n          helperText={error.password}\r\n        />\r\n        <TextField\r\n          className={classes.root}\r\n          id=\"add-user-name\"\r\n          label=\"Имя пользователя\"\r\n          type=\"text\"\r\n          fullWidth\r\n          inputRef={nameRef}\r\n        />\r\n        <TextField\r\n          className={classes.root}\r\n          id=\"add-user-comment\"\r\n          label=\"Комментарий\"\r\n          multiline\r\n          fullWidth\r\n          inputRef={commentRef}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={toggleDialogClose}\r\n        >\r\n          Отмена\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            commitHandler();\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >Создать</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Button } from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { AddUserDialog } from \"./Components\";\r\n\r\nexport const AddUser: React.FC = () => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"default\"\r\n        endIcon={<AddIcon />}\r\n        onClick={handleClickOpen}\r\n      >Добавить</Button>\r\n\r\n      <AddUserDialog\r\n        open={open}\r\n        toggleDialogClose={handleClose}\r\n      />\r\n    </>\r\n  );\r\n}","import React, { FC } from 'react';\r\nimport { Box, Typography } from \"@material-ui/core\";\r\n\r\ninterface LoginErrorProps {\r\n  errMsg: string;\r\n}\r\n\r\nexport const LoginError: FC<LoginErrorProps> = ({ errMsg }) => {\r\n  if (errMsg) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" py={2}>\r\n        <Typography color=\"error\" variant=\"subtitle1\" align=\"center\">\r\n          {errMsg}\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}","import React, { FC } from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n// const LinkBehavior = React.forwardRef<any, Omit<RouterLinkProps, 'to'>>((props, ref) => (\r\n//   <RouterLink ref={ref} to=\"/getting-started/installation/\" {...props} />\r\n// ));\r\n\r\nexport const UsersList: FC<{ users: IUsersData[] }> = ({ users }) => {\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginBottom: 20 }}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Имя</TableCell>\r\n            <TableCell align=\"center\">Почта</TableCell>\r\n            <TableCell align=\"center\">Комментарий</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {users.map(({ email, comment, displayName, id }) => (\r\n            <TableRow key={id}>\r\n              <TableCell align=\"left\">\r\n                <Link component={RouterLink} to={`/users/${id}`}>{displayName}</Link>\r\n              </TableCell>\r\n              <TableCell align=\"center\">{email}</TableCell>\r\n              <TableCell align=\"center\">{comment}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey, green } from \"@material-ui/core/colors\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nexport interface CellTestProps {\r\n  itemVals: string[][];\r\n  itemNum: string;\r\n  onChange: (value: string, name: string) => void;\r\n}\r\n\r\ninterface StyleProps {\r\n  media: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  groupWrapper: {\r\n    border: `1px solid ${grey[400]}`,\r\n    borderRadius: 8,\r\n    \"&:not(:last-child)\": {\r\n      marginBottom: 20\r\n    }\r\n  },\r\n  radioItem: {\r\n    \"&:not(:last-child)\": {\r\n      borderRight: (props: StyleProps) => props.media ? \"none\" : `1px solid ${grey[200]}`,\r\n      borderBottom: (props: StyleProps) => props.media ? `1px solid ${grey[200]}` : \"none\"\r\n    },\r\n\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    cursor: \"pointer\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n    \"&:checked + label\": {\r\n      background: green[300],\r\n      color: grey[900],\r\n      transition: \"background 0.2s linear\"\r\n    }\r\n  }\r\n});\r\n\r\nexport const TestCell = React.memo<CellTestProps>(({ itemVals, itemNum, onChange }) => {\r\n  const matchesDown600 = useMediaQuery(\"(max-width: 600px)\");\r\n\r\n  const changeHandler = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = evt.target.value;\r\n    const name = evt.target.name;\r\n    onChange(val, name);\r\n  }\r\n\r\n  const classes = useStyles({ media: matchesDown600 });\r\n\r\n  return (\r\n    <Grid container className={classes.groupWrapper} direction={matchesDown600 ? \"column\" : \"row\"}>\r\n      {itemVals.map(val => (\r\n        <Grid item container \r\n          className={classes.radioItem} \r\n          xs={12} sm={3}\r\n          key={val[0] + itemNum} \r\n        >\r\n          <input type=\"radio\" name={itemNum} value={val[0]} id={val[0] + itemNum} className={classes.input} onChange={changeHandler} />\r\n          <label className={classes.label} htmlFor={val[0] + itemNum}>\r\n            <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\r\n              {val[1]}\r\n            </Typography>\r\n          </label>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { FC } from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles, Theme, createStyles  } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  tbFS: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"12px\",\r\n      padding: 10\r\n    }\r\n  },\r\n  table: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      maxWidth: \"100%\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport const RenderUserPosts: FC<{ testData: ITestData[] }> = ({ testData }) => {\r\n  const matchesDown600 = useMediaQuery(\"(max-width: 600px)\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper} style={{ marginBottom: 20 }}>\r\n      <Table size={matchesDown600 ? \"small\" : \"medium\"}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">Название</TableCell>\r\n            <TableCell align=\"right\">Время прохождения</TableCell>\r\n            <TableCell align=\"right\">Результат (баллы)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody className={classes.table}>\r\n          {testData.map(({ title, date, result }) => {\r\n            const dateObj = new Date(date);\r\n            const dateFormatted = dateObj.toLocaleString(\"ru\", {\r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric',\r\n              weekday: 'long',\r\n              timeZone: 'Europe/Moscow',\r\n              hour: 'numeric',\r\n              minute: 'numeric',\r\n              second: 'numeric'\r\n            });\r\n\r\n            return (\r\n              <TableRow key={date}>\r\n                <TableCell className={classes.tbFS} align=\"left\">{title}</TableCell>\r\n                <TableCell className={classes.tbFS} align=\"right\">{dateFormatted}</TableCell>\r\n                <TableCell className={classes.tbFS} align=\"right\">\r\n                  <Typography color=\"secondary\">{result}</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React, { FC } from 'react';\r\n\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, TooltipProps } from 'recharts';\r\n\r\nconst CustomTooltip: FC<TooltipProps & { chartData: any }> = ({ payload, label, active, chartData }) => {\r\n  if (active) {\r\n    const tooltipData = chartData.find((item: any) => item.date === label);\r\n    return (\r\n      <div className=\"custom-tooltip\" style={{\r\n        backgroundColor: \"rgba(214, 251, 255, .8)\",\r\n        padding: \"2px 10px\",\r\n        borderRadius: 8\r\n      }}>\r\n        <p className=\"label\">{label}</p>\r\n        {tooltipData.try.map((dataItem: any) => (\r\n          <p className=\"intro\" key={dataItem.hour + dataItem.min}>{dataItem.hour + \":\" + dataItem.min} —\r\n            <span style={{ color: \"red\" }}> {dataItem.result}</span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport const TestsChart: FC<{\r\n  data: Array<{\r\n    date: string;\r\n    result: number;\r\n  }>\r\n}> = ({ data }) => {\r\n  const charData = data.map(({ date, result }) => {\r\n    const dateInst = new Date(date);\r\n\r\n    return {\r\n      date: `${dateInst.getDate()}.${dateInst.getMonth()}.${dateInst.getFullYear()}`,\r\n      hour: dateInst.getHours(),\r\n      min: dateInst.getMinutes(),\r\n      result: result\r\n    }\r\n  });\r\n\r\n  const reducedChrtData = charData.reduce<any>((resArr, currObj) => {\r\n    const inSameDay: any = resArr.findIndex((item: any) => item.date === currObj.date)\r\n\r\n    if (inSameDay !== -1) {\r\n      resArr[inSameDay].try.push({hour: currObj.hour, min: currObj.min, result: currObj.result})\r\n    } else {\r\n      return [...resArr, { date: currObj.date, try: [{ hour: currObj.hour, min: currObj.min, result: currObj.result }] }]\r\n    }\r\n\r\n    return resArr;\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <div style={{\r\n      maxWidth: \"100%\",\r\n      overflowX: \"auto\"\r\n    }}>\r\n      <LineChart width={reducedChrtData.length * 100} height={300} data={reducedChrtData} margin={{ top: 14, right: 50, bottom: 5, left: 0 }}>\r\n        <Line type=\"linear\" dataKey={(arg) => arg.try[0].result} stroke=\"#8884d8\" />\r\n        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n        <XAxis dataKey=\"date\" />\r\n        <YAxis  />\r\n        <Tooltip content={<CustomTooltip chartData={reducedChrtData} />} />\r\n      </LineChart>\r\n    </div>\r\n    \r\n  );\r\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m467 50h-422c-24.813 0-45 20.187-45 45v228c0 24.813 20.187 45 45 45h20v64c0 16.542 13.458 30 30 30h114c16.542 0 30-13.458 30-30v-64h228c24.813 0 45-20.187 45-45v-228c0-24.813-20.187-45-45-45zm-258 382h-114v-87c0-31.951 21.321-65 57-65s57 33.049 57 65zm-98-223c0-22.607 18.393-41 41-41s41 18.393 41 41-18.393 41-41 41-41-18.393-41-41zm371 114c0 8.271-6.729 15-15 15h-228.267c-1.472-21.162-9.523-41.832-22.632-57.592-5.545-6.666-11.837-12.311-18.708-16.862 15.635-13.035 25.607-32.646 25.607-54.546 0-39.149-31.851-71-71-71s-71 31.851-71 71c0 21.9 9.972 41.511 25.608 54.545-6.872 4.552-13.164 10.196-18.708 16.862-13.11 15.761-21.16 36.431-22.633 57.593h-20.267c-8.271 0-15-6.729-15-15v-228c0-8.271 6.729-15 15-15h422c8.271 0 15 6.729 15 15z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m432 130h-80c-8.284 0-15 6.716-15 15s6.716 15 15 15h80c8.284 0 15-6.716 15-15s-6.716-15-15-15z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m432 194h-80c-8.284 0-15 6.716-15 15s6.716 15 15 15h80c8.284 0 15-6.716 15-15s-6.716-15-15-15z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m432 258h-80c-8.284 0-15 6.716-15 15s6.716 15 15 15h80c8.284 0 15-6.716 15-15s-6.716-15-15-15z\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 288,\n  cy: 273,\n  r: 15\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 288,\n  cy: 209,\n  r: 15\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 288,\n  cy: 145.002,\n  r: 15\n}));\n\nvar SvgTable = function SvgTable(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    enableBackground: \"new 0 0 512 512\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTable, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/table.49986e25.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M460.8,25.55c-28.2-0.1-51.1,22.8-51.2,51c0,13.3,5.1,26.1,14.4,35.6l-93.5,187.1c-2-0.3-4.1-0.6-6.2-0.6 c-6.6,0-13.2,1.3-19.3,3.8l-72.6-81.7c4.2-7.5,6.5-15.9,6.6-24.6c0-28.3-22.9-51.2-51.2-51.2s-51.2,22.9-51.2,51.2 c0.1,12.2,4.5,24,12.6,33.2l-88.9,155.5c-3-0.6-6.1-0.9-9.1-0.9c-28.3,0-51.2,22.9-51.2,51.2c0,28.3,22.9,51.2,51.2,51.2 s51.2-22.9,51.2-51.2c-0.1-12.2-4.5-24-12.6-33.2l88.8-155.5c9.5,1.9,19.4,0.9,28.3-2.9l72.6,81.7c-4.2,7.5-6.4,16-6.5,24.6 c-0.1,28.3,22.8,51.3,51,51.4c28.3,0.1,51.3-22.8,51.4-51c0-13.3-5.1-26.2-14.4-35.8l93.5-187.1c2,0.3,4.1,0.6,6.2,0.6 c28.3,0,51.2-22.9,51.2-51.2S489.1,25.55,460.8,25.55z\"\n})));\n\nvar SvgChart = function SvgChart(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 511.9 511.9\",\n    style: {\n      enableBackground: \"new 0 0 511.9 511.9\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgChart, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chart.0aaedf22.svg\";\nexport { ForwardRef as ReactComponent };","import React, { FC } from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles, Theme, createStyles  } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  tbFS: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"12px\",\r\n      padding: 10\r\n    }\r\n  },\r\n  table: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      maxWidth: \"100%\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport const TestsListTable: FC<{\r\n  testData: Array<{\r\n    date: string;\r\n    result: number;\r\n  }>\r\n}> = ({ testData }) => {\r\n  const matchesDown600 = useMediaQuery(\"(max-width: 600px)\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer style={{ marginBottom: 20 }}>\r\n      <Table size={matchesDown600 ? \"small\" : \"medium\"}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\"><b>Время прохождения</b></TableCell>\r\n            <TableCell align=\"right\"><b>Результат</b> (баллы)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody className={classes.table}>\r\n          {testData.map(({ date, result }) => {\r\n            const dateObj = new Date(date);\r\n            const dateFormatted = dateObj.toLocaleString(\"ru\", {\r\n              year: 'numeric',\r\n              month: 'long',\r\n              day: 'numeric',\r\n              weekday: 'long',\r\n              timeZone: 'Europe/Moscow',\r\n              hour: 'numeric',\r\n              minute: 'numeric',\r\n              second: 'numeric'\r\n            });\r\n\r\n            return (\r\n              <TableRow key={date}>\r\n                <TableCell className={classes.tbFS} align=\"left\">{dateFormatted}</TableCell>\r\n                <TableCell className={classes.tbFS} align=\"right\">\r\n                  <Typography color=\"secondary\">{result}</Typography>\r\n                </TableCell>\r\n              </TableRow>\r\n            )\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}","import React, { FC, useState } from \"react\";\r\nimport { TestsChart } from \"./TestsChart\";\r\n\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {ReactComponent as TableIcon} from \"../../../../Assets/table.svg\";\r\nimport {ReactComponent as ChartIcon} from \"../../../../Assets/chart.svg\";\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport { TestsListTable } from \"./TestsListTable\";\r\n\r\nconst useSyles = makeStyles((theme: Theme) => createStyles({\r\n  details: {\r\n    flexDirection: \"column\",\r\n  },\r\n  icnsBox: {\r\n    borderTop: `1px solid ${grey[300]}`,\r\n    borderBottom: `1px solid ${grey[300]}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-start\",\r\n  }\r\n}));\r\n\r\nexport const AccItem: FC<{\r\n  title: string;\r\n  accItemData: Array<{\r\n    date: string;\r\n    result: number;\r\n  }>;\r\n}> = ({ title, accItemData }) => {\r\n  const classes = useSyles();\r\n  const [displayState, setDisplayState] = useState<\"chart\" | \"table\">(\"table\");\r\n\r\n  const changeView = (view: \"chart\" | \"table\") => {\r\n    setDisplayState(view)\r\n  }\r\n\r\n  return (\r\n    <Accordion>\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        id={`panel-${title}`}\r\n      >\r\n        <Typography>{title}</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails className={classes.details}>\r\n        <Box className={classes.icnsBox} py={1} mb={1}>\r\n          <IconButton style={{ marginRight: 14 }} onClick={() => changeView(\"table\")}>\r\n            <TableIcon style={{ width: 30, height: 30 }} />\r\n          </IconButton>\r\n          <IconButton onClick={() => changeView(\"chart\")}>\r\n            <ChartIcon style={{ width: 30, height: 30 }} />\r\n          </IconButton>\r\n        </Box>\r\n        {displayState === \"chart\" ? \r\n          <TestsChart data={accItemData.reverse()} /> :\r\n          <TestsListTable testData={accItemData} />\r\n        }\r\n        \r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n}","import React, { FC } from 'react';\r\nimport { AccItem } from \"./AccItem\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport const UserTestsAcc: FC<{\r\n  data: ITestsDataSorted\r\n}> = ({ data }) => {\r\n  return <Paper>\r\n    {Object.entries(data).map(dataItem => (\r\n      <AccItem title={dataItem[1].title} accItemData={dataItem[1].content} key={dataItem[0]} />\r\n    ))}\r\n  </Paper>;\r\n}","import React, { Component } from \"react\";\r\nimport { TextField, Button, CircularProgress, Box  } from \"@material-ui/core\";\r\nimport { checkValidity } from \"@/Shared/utility\";\r\nimport { connect } from \"react-redux\";\r\nimport { PsyTestsState } from \"@/rdx/store\";\r\nimport * as adminCreateActions from \"@/rdx/createAdmin/createAdminActions\";\r\nimport { userLoggedIn } from \"@/rdx/userLogin/userLoginActions\";\r\nimport { LoginError } from \"@/Components\";\r\n\r\nconst mapStateToProps = (state: PsyTestsState, ownProps: { tabId: number }) => {\r\n  return {\r\n    tabId: ownProps.tabId,\r\n    creationInProgress: state.createAdmin.isCreating || state.userLogin.userisLogging,\r\n    error: state.createAdmin.error || state.userLogin.userLoinError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  createAdmin: adminCreateActions.createAdmin,\r\n  signin: userLoggedIn,\r\n}\r\n\r\ntype RawLoginProps = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;\r\n\r\ntype RawLoginState = {\r\n  inputs: {\r\n    email: {\r\n      value: string;\r\n      validation: ValidationRules;\r\n      valid: boolean;\r\n    },\r\n    password: {\r\n      value: string;\r\n      validation: ValidationRules;\r\n      valid: boolean;\r\n    }\r\n  }\r\n}\r\n\r\nclass RawLogin extends Component<RawLoginProps, RawLoginState > {\r\n  state = {\r\n    inputs: {\r\n      email: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: true\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 6,\r\n          isPassword: true\r\n        },\r\n        valid: true\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangeField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const  { value, name } = event.target;\r\n    this.setState((prevState: RawLoginState) => {\r\n      return {\r\n        inputs: {\r\n          ...prevState.inputs,\r\n          [name]: {\r\n            ...prevState.inputs[name as \"email\" | \"password\"],\r\n            value: value,\r\n            valid: true\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmitHandler = (event: React.FormEvent) => {\r\n    const { email, password } = this.state.inputs;\r\n    event.preventDefault();\r\n\r\n    const isEmailValid = checkValidity(email.value, email.validation);\r\n    const isPasswordValid = checkValidity(password.value, password.validation);\r\n\r\n    this.setState((prevState: RawLoginState) => {\r\n      return {\r\n        inputs: {\r\n          email: {\r\n            ...prevState.inputs.email,\r\n            valid: isEmailValid\r\n          },\r\n          password: {\r\n            ...prevState.inputs.password,\r\n            valid: isPasswordValid\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    if (isEmailValid && isPasswordValid) {\r\n      if (this.props.tabId === 0) {\r\n        this.props.signin({ email: email.value, password: password.value })\r\n      } else {\r\n        this.props.createAdmin({ email: email.value, password: password.value });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { tabId } = this.props;\r\n    const isValidEmail = this.state.inputs.email.valid;\r\n    const isValidPass = this.state.inputs.password.valid;\r\n    const creatingInProgress = this.props.creationInProgress;\r\n\r\n    return (\r\n      <form autoComplete=\"off\" onSubmit={this.onSubmitHandler}>\r\n        <TextField\r\n          id=\"input-email\"\r\n          label=\"Введите e-mail\"\r\n          variant=\"outlined\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          onChange={this.onChangeField}\r\n          fullWidth\r\n          inputProps={{\r\n            form: {\r\n              autocomplete: 'off',\r\n            },\r\n          }}\r\n          style={{ marginBottom: \"20px\" }}\r\n          error={!isValidEmail}\r\n          helperText={!isValidEmail && \"Некорректный e-mail\"}\r\n        />\r\n        <TextField\r\n          id=\"input-password\"\r\n          label=\"Введите пароль\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          fullWidth\r\n          onChange={this.onChangeField}\r\n          style={{ marginBottom: \"20px\" }}\r\n          error={!isValidPass}\r\n          helperText={!isValidPass && \"Некорректный пароль\"}\r\n        />\r\n        {tabId === 0 ? \r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            type=\"submit\" \r\n            fullWidth>\r\n            Войти\r\n          </Button> : \r\n          <Button variant=\"contained\" type=\"submit\" fullWidth>\r\n            Зарегистрироваться\r\n          </Button> \r\n        }\r\n        {creatingInProgress &&\r\n          <Box display=\"flex\" justifyContent=\"center\" py={2}>\r\n            <CircularProgress />\r\n          </Box>\r\n        }\r\n        { this.props.error &&\r\n          <LoginError errMsg={this.props.error.message} />\r\n        }\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(RawLogin);","import React, { Component } from \"react\";\r\nimport { Grid, Paper, Box, Tabs, Tab } from \"@material-ui/core\";\r\nimport { AppBar } from '@material-ui/core';\r\nimport { Login } from \"@/Containers/Login/Login\";\r\n\r\nexport class LoginScreen extends Component {\r\n  state = {\r\n    tabState: 0\r\n  }\r\n\r\n  tabChangeHandler = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    this.setState({ tabState: newValue });\r\n  }\r\n\r\n  render() {\r\n    const { tabState } = this.state;\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n        style={{ height: \"100%\" }}>\r\n        <Grid item lg={3} md={4} sm={6} xs={10}>\r\n          <Paper>\r\n            <AppBar position=\"static\">\r\n              <Tabs\r\n                value={tabState}\r\n                onChange={this.tabChangeHandler}\r\n                aria-label=\"Выбор способа входа\"\r\n                variant=\"fullWidth\"\r\n              >\r\n                <Tab label=\"Вход\" id=\"choose-login-type-0\" />\r\n                <Tab label=\"Регистрация\"  id=\"choose-login-type-1\" />\r\n              </Tabs>\r\n            </AppBar>\r\n            <Box p={2} pt={3}>\r\n              <Login tabId={tabState} />\r\n            </Box>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}","import React, { FC } from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport const CenterContent: FC = ({ children }) => (\r\n  <Grid container justify=\"center\" alignItems=\"center\" style={{ height: \"100%\" }}>\r\n    {children}\r\n  </Grid>\r\n);","import React, { FC } from 'react';\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const MainContainer: React.FC= ({ children }) => {\r\n  return (\r\n    <Container maxWidth=\"lg\" style={{ paddingTop: 20 }}>\r\n      {children as any}\r\n    </Container>\r\n  );\r\n}","import {createAction } from \"@reduxjs/toolkit\";\r\n\r\n// SUBSCRIBE_USERS_COLLECTION\r\n// UNSUBSCRIBE_USERS_COLLECTION\r\n// RECIEVE_USERS_COLLECTION_DATA\r\n// REIEVE_ERR_USERS_COLLECTION_DATA\r\n\r\nexport const subscribeUC = createAction(\"SUBSCRIBE_USERS_COLLECTION\");\r\n\r\nexport const unsubscrUC = createAction(\"UNSUBSCRIBE_USERS_COLLECTION\");\r\n\r\nexport const recieveUCData = createAction<IUsersData>(\"RECIEVE_USERS_COLLECTION_DATA\");","import React, { PureComponent } from 'react';\r\nimport { AddUser } from \"@/Components\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  subscribeUC,\r\n  unsubscrUC,\r\n} from \"@/rdx/users/usersActions\";\r\nimport { PsyTestsState } from \"@/rdx/store\";\r\nimport { UsersList } from \"@/Components\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst mapDispatchtoProps = {\r\n  subscribeUC,\r\n  unsubscrUC\r\n}\r\n\r\nconst mapStateToProps = (state: PsyTestsState) => ({\r\n  usersData: state.users\r\n})\r\n\r\ntype UsersProps = ReturnType<typeof mapStateToProps> & typeof mapDispatchtoProps;\r\n\r\nexport class RawUsers extends PureComponent<UsersProps> {\r\n  componentDidMount() {\r\n    this.props.subscribeUC();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.unsubscrUC();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Typography variant=\"h4\" style={{ marginBottom: 20 }}>Ваши пользователи:</Typography>\r\n        <UsersList users={this.props.usersData} />\r\n        <AddUser />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Users = connect(mapStateToProps, mapDispatchtoProps)(RawUsers);","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getTestsStart = createAction<string>(\"GET_TESTS_START\");\r\n\r\nexport const getTestsSuccess = createAction<ITestData[]>(\"GET_TESTS_SUCCESS\");\r\n\r\nexport const getTestsError = createAction<Error>(\"GET_TESTS_ERROR\");","import React, { Component } from 'react';\r\nimport  { connect } from \"react-redux\";\r\nimport { getTestsStart } from \"@/rdx/getTests/getTestsACctions\";\r\nimport { PsyTestsState } from \"@/rdx/store\";\r\nimport { UserTestsAcc } from \"@/Components/ShowUserTests\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst mapStateToProps = ({ userTests: { isRequesting, testsReqData, error } }: PsyTestsState, ownProps: { userId: string }) => ({\r\n  isRequesting,\r\n  testsReqData,\r\n  error,\r\n  uid: ownProps.userId\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getTestsStart\r\n};\r\n\r\ntype UserTestsByIdProps = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;\r\n\r\nexport class RawUserTestsById extends Component<UserTestsByIdProps> {\r\n  componentDidMount() {\r\n    const { uid } = this.props;\r\n    this.props.getTestsStart(uid);\r\n  }\r\n\r\n  render() {\r\n    const { testsReqData, isRequesting } = this.props;\r\n    let preparedData: ITestsDataSorted | null = null;\r\n\r\n    if (testsReqData !== null && testsReqData.length > 0) {\r\n      const dataCopy = testsReqData.map(({ date, title, idName, result }) => {\r\n        return {\r\n          date,\r\n          title,\r\n          idName,\r\n          result\r\n        }\r\n      })\r\n\r\n      const dataSorted = dataCopy.sort((a, b) => {\r\n        if (new Date(a.date) > new Date(b.date)) {\r\n          return -1;\r\n        }\r\n        if (new Date(a.date) < new Date(b.date)) {\r\n          return 1;\r\n        }\r\n  \r\n        return 0;\r\n      });\r\n\r\n      preparedData = dataSorted!.reduce<ITestsDataSorted>((result: any, current) => {\r\n        \r\n        if (!result[current.idName]) {\r\n          result[current.idName] = {\r\n            title: current.title,\r\n            legen: \"Place for description\",\r\n            content: []\r\n          }\r\n        }\r\n\r\n        result[current.idName].content.push({ date: current.date, result: current.result });\r\n  \r\n        return result;\r\n  \r\n      }, {});\r\n    }\r\n\r\n    \r\n    \r\n    \r\n    return (\r\n      <>\r\n        {isRequesting &&\r\n          <Box display=\"flex\" justifyContent=\"center\" py={2}>\r\n            <CircularProgress />\r\n          </Box>\r\n        }\r\n        {preparedData && <UserTestsAcc data={preparedData} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const UserTestsById = connect(mapStateToProps, mapDispatchToProps)(RawUserTestsById);","import React from 'react';\r\nimport { MainContainer } from \"@/Layout/MainContainer\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Users } from \"@/Containers/Users\";\r\nimport { UserTestsById } from \"@/Containers/UserTestsById\";\r\n\r\nexport const AdminDashboard: React.FC = () => {\r\n\r\n    return (\r\n      <MainContainer>\r\n        <Switch>\r\n          <Route exact path=\"/users\" render={() => <Users />} />\r\n          <Route path=\"/users/:userId\" render={({ match: { params: { userId } } }) => <UserTestsById userId={userId} />} />\r\n        </Switch>\r\n      </MainContainer>\r\n    );\r\n}","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/functions\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBVUjKZGYb30SYYASHwnZIxlVu0X9yfQA8\",\r\n  authDomain: \"psy-test-f5086.firebaseapp.com\",\r\n  databaseURL: \"https://psy-test-f5086.firebaseio.com\",\r\n  projectId: \"psy-test-f5086\",\r\n  storageBucket: \"psy-test-f5086.appspot.com\",\r\n  messagingSenderId: \"406917090759\",\r\n  appId: \"1:406917090759:web:514497dcd2fe208c279de2\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\n\r\nexport const db = firebase.firestore();","import React, { FC } from 'react';\r\nimport { IconButton  } from \"@material-ui/core\";\r\nimport { auth } from \"@/fbConfig\";\r\nimport ExitToAppRoundedIcon from '@material-ui/icons/ExitToAppRounded';\r\n\r\nexport const LogoutBtn: FC = () => (\r\n  <IconButton color=\"inherit\"\r\n    aria-label=\"Выход\"\r\n    onClick={() => {\r\n      auth.signOut();\r\n      window.location.replace(\"/\");\r\n    }}\r\n  ><ExitToAppRoundedIcon /></IconButton>\r\n);","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\r\nimport { AdminDashboard } from \"@/Containers/AdminDashboard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { PsyTestsState } from \"@/rdx/store\";\r\nimport { LogoutBtn } from \"@/UI/LogoutBtn\";\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, Theme, createStyles  } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  userEmail: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  logoutBtn: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: \"auto\"\r\n    }\r\n  }\r\n}));\r\n\r\n\r\nexport const AdminScreen: React.FC = () => {\r\n  const email = useSelector(({ user: { user } }: PsyTestsState) => user!.email);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" style={{ flexGrow: 1 }} className={classes.userEmail}>\r\n              {email}\r\n            </Typography>\r\n            <Button component={Link} to=\"/users\" variant=\"outlined\" color=\"inherit\">Пользователи</Button>\r\n            <div className={classes.logoutBtn}>\r\n              <LogoutBtn />\r\n            </div>\r\n          </Toolbar>\r\n      </AppBar>\r\n      <AdminDashboard />\r\n    </>\r\n  );\r\n};","import React from 'react'\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport {\r\n  Grid, Card, CardContent, CardActions, Typography, Button\r\n} from \"@material-ui/core\";\r\n\r\nexport const TestsScreen: React.FC = () => {\r\n  return (\r\n    <Grid container spacing={1}>\r\n      <Grid item lg={4} xs={12} sm={6}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" align=\"center\">Шкала Депрессии Бека</Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button variant=\"outlined\" size=\"large\" fullWidth component={RouterLink} to=\"/tests/shkalaDepressiiBeka\">Пройти</Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item lg={4} xs={12} sm={6}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" align=\"center\">Шкала Тревоги Бека</Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button variant=\"outlined\" size=\"large\" fullWidth component={RouterLink} to=\"/tests/shkalaTrevojnBeka\">Пройти</Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n\r\n      <Grid item lg={4} xs={12} sm={6}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" align=\"center\">Шкала Безнадёжности Бека</Typography>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Button variant=\"outlined\" size=\"large\" fullWidth component={RouterLink} to=\"/tests/beznadBeka\">Пройти</Button>\r\n          </CardActions>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const sendTestStart = createAction<ISendTestData>(\"SEND_TEST_START\");\r\n\r\nexport const sendTestSuccess = createAction(\"SEND_TEST_SUCCESS\");\r\n\r\nexport const sendTestErr = createAction<Error>(\"SEND_TEST_ERROR\");\r\n\r\nexport const sendTestClearStatus = createAction(\"SEND_TEST_CLEAR_STATUS\");","export const deprBeka = {\r\n  testTitle: \"Шкала Депрессии А. Бека\",\r\n  idTitle: \"shkalaDepressiiBeka\",\r\n  instruction: \"Прочитайте утверждение и выберите тот вариант ответа, который наиболее точно определяет ваше самочувствие в настоящий момент.\",\r\n  items: {\r\n    item1: {\r\n      var1: \"я чувствую себя хорошо\",\r\n      var2: \"мне плохо\",\r\n      var3: \"мне все время грустно, и я ничего не могу с собой поделать\",\r\n      var4: \"мне так скучно и грустно, что я не в силах больше терпеть\",\r\n    },\r\n    item2: {\r\n      var1: \"будущее не пугает меня\",\r\n      var2: \"я боюсь будущего\",\r\n      var3: \"меня ничто не радует\",\r\n      var4: \"мое будущее беспросветно\",\r\n    },\r\n    item3: {\r\n      var1: \"в жизни мне большей частью везло\",\r\n      var2:  \"неудач и провалов было у меня больше, чем у кого-либо другого\",\r\n      var3: \"я ничего не добился в жизни\",\r\n      var4: \"я потерпел полное фиаско – как родитель, партнер, ребенок, на профессиональном уровне – словом, всюду\",\r\n    },\r\n    item4: {\r\n      var1: \"не могу сказать, что я неудовлетворен\",\r\n      var2: \"как правило, я скучаю\",\r\n      var3: \"что бы я ни делал, ничто меня не радует, я как заведенная машина\",\r\n      var4: \"меня не удовлетворяет абсолютно все\",\r\n    },\r\n    item5: {\r\n      var1: \"у меня нет ощущения, будто я кого-то обидел\",\r\n      var2: \"может, я и обидел кого-то, сам того не желая, но мне об этом ничего не известно\",\r\n      var3: \"у меня такое чувство, будто я всем приношу только несчастья\",\r\n      var4: \"я плохой человек, слишком часто я обижал других людей\",\r\n    },\r\n    item6: {\r\n      var1: \"я доволен собой\",\r\n      var2: \"иногда я чувствую себя несносным\",\r\n      var3:  \"порой я испытываю комплекс неполноценности\",\r\n      var4: \"я совершенно никчемный человек\",\r\n    },\r\n    item7: {\r\n      var1: \"у меня не складывается впечатление, будто я совершил нечто такое, что заслуживает наказания\",\r\n      var2: \"я чувствую, что наказан или буду наказан за нечто такое, чему стал виной\",\r\n      var3: \"я знаю, что заслуживаю наказания\",\r\n      var4: \"я хочу, чтобы жизнь меня наказала\",\r\n    },\r\n    item8: {\r\n      var1: \"я никогда не разочаровывался в себе\",\r\n      var2: \"я много раз испытывал разочарование в самом себе\",\r\n      var3: \"я не люблю себя\",\r\n      var4: \"я себя ненавижу\",\r\n    },\r\n    item9: {\r\n      var1: \"я ничем не хуже других\",\r\n      var2: \"порой я допускаю ошибки\",\r\n      var3: \"просто ужасно, как мне не везет\",\r\n      var4: \"я сею вокруг себя одни несчастья\",\r\n    },\r\n    item10: {\r\n      var1: \"я люблю себя и не обижаю себя\",\r\n      var2: \"иногда я испытываю желание сделать решительный шаг, но не отваживаюсь\",\r\n      var3: \"лучше было бы вовсе не жить\",\r\n      var4: \"я подумываю о том, чтобы покончить жизнь самоубийством\",\r\n    },\r\n    item11: {\r\n      var1: \"у меня нет причин плакать\",\r\n      var2: \"бывает, что я и поплачу\",\r\n      var3: \"я плачу теперь постоянно, так что не могу выплакаться\",\r\n      var4: \"раньше я плакал, а теперь как-то не выходит, даже когда хочется\",\r\n    },\r\n    item12: {\r\n      var1: \"я спокоен\",\r\n      var2: \"я легко раздражаюсь\",\r\n      var3: \"я нахожусь в постоянном напряжении, как готовый взорваться паровой котел\",\r\n      var4: \"мне теперь все безразлично; то, что раньше раздражало меня, сейчас будто бы меня не касается\",\r\n    },\r\n    item13: {\r\n      var1: \"принятие решения не доставляет мне особых проблем\",\r\n      var2: \"иногда я откладываю решение на потом\",\r\n      var3: \"принимать решение для меня проблематично\",\r\n      var4: \"я вообще никогда ничего не решаю\",\r\n    },\r\n    item14: {\r\n      var1: \"мне не кажется, будто я выгляжу плохо или хуже, чем прежде\",\r\n      var2: \"меня волнует, что я неважно выгляжу\",\r\n      var3: \"я выгляжу плохо\",\r\n      var4: \"я безобразен, у меня просто отталкивающая внешность\",\r\n    },\r\n    item15: {\r\n      var1: \"совершить поступок – для меня не проблема\",\r\n      var2: \"мне приходится заставлять себя, чтобы сделать какой-либо важный в жизни шаг\",\r\n      var3: \"чтобы решиться на что-либо я должен очень много поработать над собой\",\r\n      var4: \"я вообще не способен что-либо реализовать\",\r\n    },\r\n    item16: {\r\n      var1: \"я сплю спокойно и хорошо высыпаюсь\",\r\n      var2: \"по утрам я просыпаюсь более утомленным, чем был до того, как заснул\",\r\n      var3: \"я просыпаюсь рано и чувствую себя невыспавшимся\",\r\n      var4: \"иногда я страдаю бессонницей, иногда просыпаюсь по несколько раз за ночь, в общей сложности я сплю не более пяти часов в сутки\",\r\n    },\r\n    item17: {\r\n      var1: \"у меня сохранилась прежняя работоспособность\",\r\n      var2: \"я быстро устаю\",\r\n      var3: \"я чувствую себя уставшим, даже если почти ничего не делаю\",\r\n      var4: \"я настолько устал, что ничего не могу делать\",\r\n    },\r\n    item18: {\r\n      var1: \"аппетит у меня такой же, каким он был всегда\",\r\n      var2: \"у меня пропал аппетит\",\r\n      var3: \"аппетит у меня гораздо хуже, чем прежде\",\r\n      var4: \"у меня вообще нет аппетита\",\r\n    },\r\n    item19: {\r\n      var1: \"бывать на людях для меня так же приятно, как и раньше\",\r\n      var2: \"мне приходится заставлять себя встречаться с людьми\",\r\n      var3: \"у меня нет никакого желания бывать в обществе\",\r\n      var4: \"я нигде не бываю, люди не интересуют меня, меня вообще не волнует ничто постороннее\",\r\n    },\r\n    item20: {\r\n      var1: \"мои эротико-сексуальные интересы сохранились на прежнем уровне\",\r\n      var2: \"секс уже не интересует меня так, как прежде\",\r\n      var3: \"сейчас я мог бы спокойно обходиться без секса\",\r\n      var4: \"секс вообще не интересует меня, я совершенно потерял к нему влечение\",\r\n    },\r\n    item21: {\r\n      var1: \"я чувствую себя вполне здоровым и забочусь о своем здоровье так же, как и раньше\",\r\n      var2: \"у меня постоянно что-то болит\",\r\n      var3: \"со здоровьем дело обстоит серьезно, я все время об этом думаю\",\r\n      var4: \"мое физическое самочувствие ужасно, болячки просто изводят меня\",\r\n    },\r\n  },\r\n  mapping: {\r\n    var1: 0,\r\n    var2: 1,\r\n    var3: 3,\r\n    var4: 4\r\n  }\r\n};","export const trevBeka: ITrevogiBekaData = {\r\n  testTitle: \"Шкала тревоги Бека\",\r\n  idTitle: \"shkalaTrevogiBeka\",\r\n  instruction: \"Данный список содержит наиболее распространенные симптомы тревоги. Пожалуйста, тщательно изучите каждый пункт. Отметьте, насколько Вас беспокоил каждый из этих симптомов в течение ПОСЛЕДНЕЙ НЕДЕЛИ, включая сегодняшний день, поставив крестик в соответствующей колонке справа.\",\r\n  items: {\r\n    item1: {\r\n      question: \"Ощущение онемения или покалывания в теле\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item2: {\r\n      question: \"Ощущение жары\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item3: {\r\n      question: \"Дрожь в ногах\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item4: {\r\n      question: \"Неспособность расслабиться\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item5: {\r\n      question: \"Страх, что произойдет самое плохое\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item6: {\r\n      question: \"Головокружение или ощущение легкости в голове\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item7: {\r\n      question: \"Ускоренное сердцебиение\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item8: {\r\n      question: \"Неустойчивость\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item9: {\r\n      question: \"Ощущение ужаса\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item10: {\r\n      question: \"Нервозность\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item11: {\r\n      question: \"Дрожь в руках\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item12: {\r\n      question: \"Ощущение удушья\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item13: {\r\n      question: \"Шаткость походки\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item14: {\r\n      question: \"Страх утраты контроля\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item15: {\r\n      question: \"Затрудненность дыхания\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item16: {\r\n      question: \"Страх смерти\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item17: {\r\n      question: \"Испуг\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item18: {\r\n      question: \"Желудочно-кишечные расстройства\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item19: {\r\n      question: \"Обмороки\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item20: {\r\n      question: \"Приливы крови к лицу\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n    item21: {\r\n      question: \"Усиление потоотделения (не связанное с жарой)\",\r\n      vars: [\r\n        [\"var1\", \"Совсем не беспокоил\"],\r\n        [\"var2\", \"Слегка. Не слишком меня беспокоил\"],\r\n        [\"var3\", \"Умеренно. Это было неприятно, но я мог это переносить\"],\r\n        [\"var4\", \"Очень сильно. Я с трудом мог это выносить\"],\r\n      ]\r\n    },\r\n  },\r\n  mapping: {\r\n    var1: 0,\r\n    var2: 1,\r\n    var3: 2,\r\n    var4: 3\r\n  }\r\n};","export const beznadBeka: IBeznadBekaData = {\r\n  testTitle: \"Шкала безнадёжности Бека\",\r\n  idTitle: \"shkalaBeznadBeka\",\r\n  instruction: \"Ниже приводится 20 утверждений о Вашем будущем. Пожалуйста, прочтите внимательно каждое и отметьте одно верное утверждение, которое наиболее точно отражает Ваши чувства в настоящее время. Среди утверждений нет правильных или неправильных. Пожалуйста, обведите ВЕРНО или НЕВЕРНО для всех утверждений. Не тратьте слишком много времени на одно утверждение.\",\r\n  items: {\r\n    q1: {\r\n      assertion: \"Я жду будущего с надеждой и энтузиазмом\",\r\n      weightVariant: false\r\n    },\r\n    q2: {\r\n      assertion: \"Мне пора сдаться, т.к. я ничего не могу изменить к лучшему\",\r\n      weightVariant: true\r\n    },\r\n    q3: {\r\n      assertion: \"Когда дела идут плохо, мне помогает мысль, что так не может продолжаться всегда\",\r\n      weightVariant: false\r\n    },\r\n    q4: {\r\n      assertion: \"Я не могу представить, на что будет похожа моя жизнь через 10 лет\",\r\n      weightVariant: true\r\n    },\r\n    q5: {\r\n      assertion: \"У меня достаточно времени, чтобы завершить дела, которыми я больше всего хочу заниматься\",\r\n      weightVariant: false\r\n    },\r\n    q6: {\r\n      assertion: \"В будущем, я надеюсь достичь успеха в том, что мне больше всего нравится\",\r\n      weightVariant: false\r\n    },\r\n    q7: {\r\n      assertion: \"Будущее представляется мне во тьме\",\r\n      weightVariant: true\r\n    },\r\n    q8: {\r\n      assertion: \"Я надеюсь получить в жизни больше хорошего, чем средний человек\",\r\n      weightVariant: false\r\n    },\r\n    q9: {\r\n      assertion: \"У меня нет никаких просветов и нет причин верить, что они появятся в будущем\",\r\n      weightVariant: true\r\n    },\r\n    q10: {\r\n      assertion: \"Мой прошлый опыт хорошо меня подготовил к будущему\",\r\n      weightVariant: false\r\n    },\r\n    q11: {\r\n      assertion: \"Всё, что я вижу впереди – скорее, неприятности, чем радости\",\r\n      weightVariant: true\r\n    },\r\n    q12: {\r\n      assertion: \"Я не надеюсь достичь того, чего действительно хочу\",\r\n      weightVariant: true\r\n    },\r\n    q13: {\r\n      assertion: \"Когда я заглядываю в будущее, я надеюсь быть счастливее, чем я есть сейчас\",\r\n      weightVariant: false\r\n    },\r\n    q14: {\r\n      assertion: \"Дела идут не так, как мне хочется\",\r\n      weightVariant: true\r\n    },\r\n    q15: {\r\n      assertion: \"Я сильно верю в своё будущее\",\r\n      weightVariant: false\r\n    },\r\n    q16: {\r\n      assertion: \"Я никогда не достигаю того, что хочу, поэтому глупо что-либо хотеть\",\r\n      weightVariant: true\r\n    },\r\n    q17: {\r\n      assertion: \"Весьма маловероятно, что я получу реальное удовлетворение в будущем\",\r\n      weightVariant: true\r\n    },\r\n    q18: {\r\n      assertion: \"Будущее представляется мне расплывчатым и неопределённым\",\r\n      weightVariant: true\r\n    },\r\n    q19: {\r\n      assertion: \"В будущем меня ждёт больше хороших дней, чем плохих\",\r\n      weightVariant: false\r\n    },\r\n    q20: {\r\n      assertion: \"Бесполезно пытаться получить то, что я хочу, потому, что, вероятно, я не добьюсь этого\",\r\n      weightVariant: true\r\n    },\r\n  }\r\n}","import React from \"react\";\r\nimport {\r\n  sendTestStart,\r\n  sendTestClearStatus,\r\n} from \"@/rdx/passTest/passTestActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { PsyTestsState } from \"@/rdx/store\";\r\nimport { deprBeka } from \"@/testsData/deprBeka\";\r\nimport { trevBeka } from \"@/testsData\";\r\nimport { beznadBeka } from \"@/testsData/beznadBeka\";\r\n\r\ninterface IPassTestProps {\r\n  testType: string;\r\n}\r\n\r\nexport const passTestWithDb = (\r\n  Component: React.ComponentType<any>\r\n) => (props: IPassTestProps) => {\r\n  let testData: any;\r\n  const dispatch = useDispatch();\r\n  const sending = useSelector(({ passTest: { inProgress } }: PsyTestsState) => inProgress);\r\n  const sendStatus = useSelector(({ passTest: { status } }: PsyTestsState) => status);\r\n  const error = useSelector(({ passTest: { error } }: PsyTestsState) => error);\r\n  const uid = useSelector(({ user }: PsyTestsState) => user.user!.uid);\r\n\r\n  switch (props.testType) {\r\n    case \"shkalaDepressiiBeka\": testData = deprBeka; break;\r\n    case \"shkalaTrevojnBeka\": testData = trevBeka; break;\r\n    case \"beznadBeka\": testData = beznadBeka; break;\r\n    default: return null;\r\n  }\r\n\r\n  const onReady = (testTitle: string, testIdName: string, testValue: number) => {\r\n    dispatch(sendTestStart({\r\n      dataToSend: {\r\n        title: testTitle, \r\n        idName: testIdName, \r\n        result: testValue,\r\n        date: new Date().toString()\r\n      },\r\n      uid: uid\r\n    }));\r\n  }\r\n\r\n  const clearStatus = () => dispatch(sendTestClearStatus());\r\n\r\n  return <Component\r\n    testData={testData}\r\n    sending={sending}\r\n    sendStatus={sendStatus}\r\n    error={error}\r\n    onReady={onReady}\r\n    onExit={clearStatus}\r\n  />;\r\n}","import React, { Component } from 'react';\r\nimport { TestCell } from \"../../Components\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { lightGreen } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { passTestWithDb } from \"@/HOC/passTestWithDb\";\r\n\r\nclass RawPassTest extends Component<IPassTestProps, any> {\r\n  testProps: any;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n\r\n    const itemsKeys = Object.keys(this.props.testData.items);\r\n    let items: any = {};\r\n\r\n    itemsKeys.forEach(itemKey => {\r\n\r\n      items = Object.assign(items, {\r\n        [itemKey]: {\r\n          ...(this.props.testData as any).items[itemKey],\r\n          value: -1\r\n        }\r\n      });\r\n    });\r\n\r\n    this.state = {\r\n      items: items,\r\n      valid: true\r\n    };\r\n\r\n    this.testProps = itemsKeys.map(itemKey => {\r\n      return [itemKey, Object.entries((this.props.testData as any).items[itemKey])]\r\n    })\r\n  }\r\n\r\n  onChangehandler = (value: string, name: string) => {\r\n    this.setState((prevState: any) => ({\r\n      ...prevState,\r\n      items: {\r\n        ...prevState.items,\r\n        [name]: {\r\n          ...prevState.items[name],\r\n          value: (this.props.testData as any).mapping[value]\r\n        }\r\n      }\r\n    }));\r\n  }\r\n\r\n  onReadyHandler = () => {\r\n    try {\r\n      const resultVal = (Object.values(this.state.items)).reduce((result, { value }: any) => {\r\n        if (parseInt(value) === -1) {\r\n          throw new Error(\"Не весть тест пройден\")\r\n        }\r\n        return result + value;\r\n      }, 0) as number;\r\n\r\n      this.setState({ valid: true })\r\n\r\n      this.props.onReady(\r\n        this.props.testData.testTitle,\r\n        this.props.testData.idTitle,\r\n        resultVal\r\n        );\r\n      \r\n    } catch (e) {\r\n      this.setState({ valid: false })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.onExit();\r\n  }\r\n\r\n  render() {\r\n    const { sending, sendStatus } = this.props;\r\n\r\n    return sendStatus === \"ok\" ? <Redirect to=\"/tests\" /> : (\r\n      <Paper style={{ padding: 20, marginBottom: 100 }} elevation={3}>\r\n        <Typography variant=\"h5\">{this.props.testData.testTitle}</Typography>\r\n        <Typography variant=\"subtitle2\" style={{ marginBottom: 30 }}>{this.props.testData.instruction}</Typography>\r\n        {this.testProps.map((item: any) => {\r\n          return <TestCell\r\n            key={item[0]}\r\n            onChange={this.onChangehandler}\r\n            itemNum={item[0]}\r\n            itemVals={item[1]}\r\n          />\r\n        })}\r\n        {!this.state.valid && \r\n          <Typography color=\"error\" variant=\"body1\" style={{ marginBottom: 10 }}>Нужно ответить на все утверждения</Typography>\r\n        }\r\n        <Button\r\n          variant=\"contained\"\r\n          style={{ backgroundColor: lightGreen[400], fontWeight: 600 }}\r\n          endIcon={sending && <CircularProgress size={20} />}\r\n          disabled={sending}\r\n          onClick={this.onReadyHandler}\r\n        >\r\n          Завершить\r\n        </Button>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nexport const PassTest = passTestWithDb(RawPassTest);","import React, { Component } from 'react';\r\nimport  { connect } from \"react-redux\";\r\nimport { getTestsStart } from \"@/rdx/getTests/getTestsACctions\";\r\nimport { PsyTestsState } from \"@/rdx/store\";\r\nimport { UserTestsAcc } from \"@/Components\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst mapStateToProps = ({ userTests: { isRequesting, testsReqData, error }, user }: PsyTestsState) => ({\r\n  isRequesting,\r\n  testsReqData,\r\n  error,\r\n  uid: user.user!.uid\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getTestsStart\r\n};\r\n\r\ntype ShowUserPostsProps = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;\r\n\r\nexport class RawShowUserPosts extends Component<ShowUserPostsProps> {\r\n  componentDidMount() {\r\n    const { uid } = this.props;\r\n    this.props.getTestsStart(uid);\r\n  }\r\n\r\n  render() {\r\n    const { testsReqData, isRequesting } = this.props;\r\n    let preparedData: ITestsDataSorted | null = null;\r\n\r\n    if (testsReqData !== null && testsReqData.length > 0) {\r\n      const dataCopy = testsReqData.map(({ date, title, idName, result }) => {\r\n        return {\r\n          date,\r\n          title,\r\n          idName,\r\n          result\r\n        }\r\n      })\r\n\r\n      const dataSorted = dataCopy.sort((a, b) => {\r\n        if (new Date(a.date) > new Date(b.date)) {\r\n          return -1;\r\n        }\r\n        if (new Date(a.date) < new Date(b.date)) {\r\n          return 1;\r\n        }\r\n  \r\n        return 0;\r\n      });\r\n\r\n      preparedData = dataSorted!.reduce<ITestsDataSorted>((result: any, current) => {\r\n        \r\n        if (!result[current.idName]) {\r\n          result[current.idName] = {\r\n            title: current.title,\r\n            legen: \"Place for description\",\r\n            content: []\r\n          }\r\n        }\r\n\r\n        result[current.idName].content.push({ date: current.date, result: current.result });\r\n  \r\n        return result;\r\n  \r\n      }, {});\r\n    }\r\n\r\n    \r\n    return (\r\n      <>\r\n        {isRequesting &&\r\n          <Box display=\"flex\" justifyContent=\"center\" py={2}>\r\n            <CircularProgress />\r\n          </Box>\r\n        }\r\n        {preparedData && <UserTestsAcc data={preparedData} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const ShowUserPosts = connect(mapStateToProps, mapDispatchToProps)(RawShowUserPosts);","import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { grey, green } from \"@material-ui/core/colors\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport interface CellTrevBekaTestProps {\r\n  itemVals: ITrvogiBekaItem;\r\n  itemNum: string;\r\n  onChange: (value: string, name: string) => void;\r\n}\r\n\r\ninterface StyleProps {\r\n  media: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  groupWrapper: {\r\n    border: `1px solid ${grey[400]}`,\r\n    borderRadius: 8,\r\n    \"&:not(:last-child)\": {\r\n      marginBottom: 20\r\n    }\r\n  },\r\n  radioItem: {\r\n    \"&:not(:last-child)\": {\r\n      borderRight: (props: StyleProps) => props.media ? \"none\" : `1px solid ${grey[200]}`,\r\n      borderBottom: (props: StyleProps) => props.media ? `1px solid ${grey[200]}` : \"none\"\r\n    },\r\n\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 10,\r\n    cursor: \"pointer\",\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n    \"&:checked + label\": {\r\n      background: green[300],\r\n      color: grey[900],\r\n      transition: \"background 0.2s linear\"\r\n    }\r\n  },\r\n  title: {\r\n    fontSize: (props: StyleProps) => props.media ? \"16px\" : \"initital\",\r\n    marginBottom: 14\r\n  }\r\n});\r\n\r\nexport const Cell = React.memo<CellTrevBekaTestProps>(({ itemVals: { vars, question }, itemNum, onChange }) => {\r\n  const matchesDown600 = useMediaQuery(\"(max-width: 600px)\");\r\n\r\n  const changeHandler = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = evt.target.value;\r\n    const name = evt.target.name;\r\n    onChange(val, name);\r\n  }\r\n\r\n  const classes = useStyles({ media: matchesDown600 });\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" className={classes.title}>{question}</Typography>\r\n      <Grid container className={classes.groupWrapper} direction={matchesDown600 ? \"column\" : \"row\"}>\r\n        {vars.map(val => (\r\n          <Grid item container \r\n            className={classes.radioItem} \r\n            xs={12} sm={3}\r\n            key={val[0] + itemNum} \r\n          >\r\n            <input type=\"radio\" name={itemNum} value={val[0]} id={val[0] + itemNum} className={classes.input} onChange={changeHandler} />\r\n            <label className={classes.label} htmlFor={val[0] + itemNum}>\r\n              <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\r\n                {val[1]}\r\n              </Typography>\r\n            </label>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      <Divider style={{ marginBottom: 10 }} />\r\n    </>\r\n  );\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Cell } from \"./Cell\";\r\n\r\nimport {Redirect } from \"react-router-dom\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { lightGreen } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { passTestWithDb } from \"@/HOC/passTestWithDb\";\r\n\r\ninterface ITrevogiBekaProps {\r\n  testData: ITrevogiBekaData;\r\n  sending: boolean;\r\n  sendStatus: string;\r\n  error: string;\r\n  onReady: (testTitle: string, testIdName: string, testValue: number) => void;\r\n  onExit: () => void;\r\n}\r\n\r\n// exmpl item1: var2\r\ntype ITrevBekaTestState = Record<string, number | null>;\r\n\r\nexport const RawTrevogiBeka: React.FC<ITrevogiBekaProps> = ({ testData, onExit, onReady, sendStatus, sending }) => {\r\n  const tdItems = Object.entries(testData.items);\r\n\r\n  const [test, setTest] = useState<ITrevBekaTestState>({});\r\n  const [isValid, setIsValid] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const testStateItems: ITrevBekaTestState = {};\r\n\r\n    Object.keys(testData.items).forEach(item => {\r\n      testStateItems[item] = null;\r\n    });\r\n\r\n    setTest(testStateItems)\r\n    \r\n    return () => {\r\n      onExit();\r\n    };\r\n  }, [onExit, testData]);\r\n\r\n  const onReadyHandler = () => {\r\n\r\n    try {\r\n      const resultVal = (Object.values(test)).reduce((result: number, value: number | null) => {\r\n        if (value === null) {\r\n          throw new Error(\"Не весть тест пройден\")\r\n        }\r\n        return result + value;\r\n      }, 0);\r\n\r\n      setIsValid(true);\r\n      \r\n      onReady(\r\n        testData.testTitle,\r\n        testData.idTitle,\r\n        resultVal\r\n        );\r\n      \r\n    } catch (e) {\r\n      setIsValid(false);\r\n    }\r\n  }\r\n\r\n  const onChangehandler = (value: string, name: string) => {\r\n    setTest({\r\n      ...test,\r\n      [name]: testData.mapping[value]\r\n    }); \r\n  }\r\n\r\n  return sendStatus === \"ok\" ? <Redirect to=\"/tests\" /> : (\r\n    <Paper style={{ padding: 20, marginBottom: 100 }} elevation={3}>\r\n      <Typography variant=\"h5\">{testData.testTitle}</Typography>\r\n      <Typography variant=\"subtitle2\" style={{ marginBottom: 30 }}>{testData.instruction}</Typography>\r\n      {tdItems.map((item) => (\r\n        <Cell \r\n          key={item[0]}\r\n          itemVals={item[1]}\r\n          itemNum={item[0]}\r\n          onChange={onChangehandler}\r\n        />\r\n      ))}\r\n      {!isValid && \r\n        <Typography color=\"error\" variant=\"body1\" style={{ marginBottom: 10 }}>Нужно ответить на все утверждения</Typography>\r\n      }\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{ backgroundColor: lightGreen[400], fontWeight: 600 }}\r\n        endIcon={sending && <CircularProgress size={20} />}\r\n        disabled={sending}\r\n        onClick={onReadyHandler}\r\n      >\r\n        Завершить\r\n      </Button>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport const TrevogiBeka = passTestWithDb(RawTrevogiBeka);","import React, { FC, useState, useEffect } from \"react\";\r\nimport { passTestWithDb } from \"@/HOC/passTestWithDb\";\r\nimport {Redirect } from \"react-router-dom\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { lightGreen } from \"@material-ui/core/colors\";\r\nimport LinearProgress, { LinearProgressProps } from '@material-ui/core/LinearProgress';\r\nimport Box from '@material-ui/core/Box';\r\n\r\ninterface RawBeznadBekaProps {\r\n  testData: IBeznadBekaData,\r\n  sending: boolean;\r\n  sendStatus: string;\r\n  error: string | null;\r\n  onReady: (testTitle: string, testIdName: string, testValue: number) => void;\r\n  onExit: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    cardContainer: {\r\n      display: \"flex\",\r\n      marginBottom: 20,\r\n      maxWidth: 600\r\n    }\r\n  })\r\n);\r\n\r\nfunction LinearProgressWithLabel(props: LinearProgressProps & { value: number, current: number, total: number }) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n      <Typography variant=\"body2\" color=\"textSecondary\">{props.current + 1}/{props.total}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport const RawBeznadBeka: FC<RawBeznadBekaProps> = ({ testData, sending, sendStatus, error, onReady, onExit }) => {\r\n  const classes = useStyles();\r\n  const [testState, setTestState] = useState<number[]>(new Array(Object.keys(testData.items).length).fill(-1));\r\n  const [currStep, setCurrStep] = useState(0);\r\n  const [dataAsArray] = useState(Object.entries(testData.items));\r\n  const [filled, setFilled] = useState(0);\r\n  const [testPassed, setTestPassed] = useState(false);\r\n  const [turning, setTurning] = useState(false);\r\n\r\n  useEffect(() => {\r\n    return () => onExit();\r\n  }, [testData.items, onExit]);\r\n\r\n  const onChooseHandler = (variant: boolean) => {\r\n    const newTestState = [...testState];\r\n    newTestState[currStep] = \r\n      dataAsArray[currStep][1].weightVariant === variant ? 1 : 0;\r\n\r\n    setTestState(newTestState);\r\n    setTurning(true);\r\n\r\n    if (testState[currStep] === -1) {\r\n      setFilled(filled + 1);\r\n    }\r\n    \r\n    setTimeout(() => {\r\n      if (currStep < dataAsArray.length - 1) {\r\n        setCurrStep(currStep + 1);\r\n        setTurning(false);\r\n      } else {\r\n        setTestPassed(true);\r\n        setTurning(false);\r\n      }\r\n\r\n    }, 300);\r\n  }\r\n  \r\n  const handleSubmit = () => {\r\n    const result = testState.reduce((res, curr) => res + curr);\r\n\r\n    onReady(\r\n      testData.testTitle,\r\n      testData.idTitle,\r\n      result\r\n      );\r\n  }\r\n\r\n  const moveNext = () => setCurrStep(currStep + 1);\r\n  const movePrev = () => setCurrStep(currStep - 1);\r\n\r\n  if (sendStatus === \"ok\") {\r\n    return <Redirect to=\"/tests\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" style={{ marginBottom: 14 }}>{testData.testTitle}</Typography>\r\n      <Typography variant=\"body1\" style={{ marginBottom: 30 }}>{testData.instruction}</Typography>\r\n\r\n      {!testPassed ? <div className={classes.cardContainer}>\r\n        <Card variant=\"outlined\">\r\n          <CardContent>\r\n          <LinearProgressWithLabel \r\n            value={Math.round(((currStep+ 1)/dataAsArray.length) * 100)} \r\n            total={dataAsArray.length} \r\n            current={currStep}\r\n          />\r\n          <Typography variant=\"h5\" component=\"h2\">\r\n            {dataAsArray[currStep][1].assertion}\r\n          </Typography>\r\n          </CardContent>\r\n          \r\n          <CardActions>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={6}>\r\n                <Button \r\n                  fullWidth \r\n                  variant=\"contained\" \r\n                  onClick={() => onChooseHandler(false)} \r\n                  disabled={turning}\r\n                >Не верно</Button>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Button \r\n                  fullWidth \r\n                  variant=\"contained\" \r\n                  onClick={() => onChooseHandler(true)} \r\n                  disabled={turning}\r\n                >Верно</Button>\r\n              </Grid>\r\n            </Grid>\r\n          </CardActions>\r\n          <CardActions>\r\n          <Button \r\n            onClick={movePrev}\r\n            disabled={currStep === 0 || turning}\r\n            size=\"small\" \r\n            color=\"primary\"\r\n          >\r\n            Назад\r\n          </Button>\r\n          <Button \r\n            onClick={moveNext}\r\n            disabled={currStep === filled || turning}\r\n            size=\"small\" \r\n            color=\"primary\"\r\n          >\r\n            Далее\r\n          </Button>\r\n          </CardActions>\r\n        </Card>\r\n      </div> :\r\n      <Typography variant=\"h5\" component=\"h2\" style={{ marginBottom: 14 }}>\r\n        Тест успешно пройден!\r\n      </Typography>\r\n      }\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        style={{ backgroundColor: lightGreen[400], fontWeight: 600 }}\r\n        endIcon={sending && <CircularProgress size={20} />}\r\n        disabled={sending || !testPassed}\r\n        onClick={handleSubmit}\r\n      >\r\n        Завершить\r\n      </Button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const BeznadBeka = passTestWithDb(RawBeznadBeka);","import React from 'react';\r\nimport { MainContainer } from \"@/Layout/MainContainer\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { TestsScreen } from \"@/Screens/TestsScreen\";\r\nimport { PassTest } from \"@/Containers/PassTest\";\r\nimport { ShowUserPosts } from \"@/Containers/ShowUserPosts\";\r\nimport { TrevogiBeka } from \"@/Containers/AppTests\";\r\nimport { BeznadBeka } from \"@/Containers/AppTests/BeznadBeka\";\r\n\r\nexport const UserDashboard: React.FC = () => {\r\n\r\n    return (\r\n      <MainContainer>\r\n        <Switch>\r\n          <Route exact path=\"/tests\" render={() => <TestsScreen />} />\r\n          <Route path=\"/tests/shkalaDepressiiBeka\" render={() => <PassTest testType=\"shkalaDepressiiBeka\" />} />\r\n          <Route path=\"/tests/shkalaTrevojnBeka\" render={() => <TrevogiBeka testType=\"shkalaTrevojnBeka\" />} />\r\n          <Route path=\"/tests/beznadBeka\" render={() => <BeznadBeka testType=\"beznadBeka\" />} />\r\n          <Route exact path=\"/mytests\" component={ShowUserPosts} />\r\n        </Switch>\r\n      </MainContainer>\r\n    );\r\n}","import React from 'react';\r\nimport { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { PsyTestsState } from \"@/rdx/store\";\r\nimport { LogoutBtn } from \"@/UI/LogoutBtn\";\r\nimport { UserDashboard } from \"@/Containers/UserDashboard\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles, Theme, createStyles  } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({\r\n  userEmail: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  logoutBtn: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      marginLeft: \"auto\"\r\n    }\r\n  }\r\n}));\r\n\r\nexport const UserScreen: React.FC = () => {\r\n  const email = useSelector(({ user: { user } }: PsyTestsState) => user!.email);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" style={{ flexGrow: 1 }} className={classes.userEmail}>\r\n              {email}\r\n            </Typography>\r\n            <Button component={Link} to=\"/mytests\" variant=\"outlined\" color=\"inherit\" style={{ marginRight: 20 }}>Пройденные тесты</Button>\r\n            <Button component={Link} to=\"/tests\" variant=\"outlined\" color=\"inherit\" style={{ marginRight: 20 }}>Доступные тесты</Button>\r\n            <div className={classes.logoutBtn}>\r\n              <LogoutBtn />\r\n            </div>\r\n          </Toolbar>\r\n      </AppBar>\r\n      <UserDashboard />\r\n    </>\r\n  );\r\n};","import React, { FC } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { PsyTestsState } from \"@/rdx/store\";\r\nimport { LoginScreen } from \"@/Screens/LoginScreen/LoginScreen\";\r\nimport { CenterContent } from \"@/Layout/CenterContent\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { AdminScreen } from \"@/Screens/AdminScreen\";\r\nimport { UserScreen } from \"@/Screens/UserScreen\";\r\n\r\nconst getUser = (state: PsyTestsState) => {\r\n  return state.user.user;\r\n}\r\n\r\nconst isCheckingState = (state: PsyTestsState) => state.user.isChecking;\r\n\r\nexport const Entry: FC = () => {\r\n  const user = useSelector(getUser);\r\n  const isChecking = useSelector(isCheckingState);\r\n\r\n  if (isChecking) {\r\n    return <CenterContent>\r\n      <CircularProgress size={60} />\r\n    </CenterContent>\r\n  }\r\n  \r\n  if (user && (user as any).admin) {\r\n    return <AdminScreen />;\r\n  } else if (user && !(user as any).admin) {\r\n    return <UserScreen />;\r\n  }\r\n\r\n  return <LoginScreen />;\r\n}","import * as actions from \"./createAdminActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\ninterface AdminCreatorState {\r\n  isCreating: boolean;\r\n  error: any;\r\n}\r\n\r\nconst adminCreatorSate: AdminCreatorState = {\r\n  isCreating: false,\r\n  error: null\r\n}\r\n\r\nexport const createAdminReducer = createReducer<AdminCreatorState>(adminCreatorSate, {\r\n  [actions.createAdmin.type]: (state) => {\r\n    state.isCreating = true;\r\n    state.error = null;\r\n  },\r\n  [actions.createAdminFailed.type]: (state, action) => {\r\n    state.isCreating = false;\r\n    state.error = action.payload;\r\n  },\r\n  [actions.createAdminSuccess.type]: (state) => {\r\n    state.isCreating = false;\r\n    state.error = null;\r\n  }\r\n});","import firebase from \"firebase/app\";\r\nimport { auth } from \"@/fbConfig\";\r\n\r\nexport const createAdminWithEmailAndPassword = async (credentials: UserCredentials) => {\r\n  const { email, password } = credentials;\r\n  const createAdmin = firebase.functions().httpsCallable(\"psyCreateAdmin\");\r\n  await createAdmin({email, password});\r\n  const signInResult = await auth.signInWithEmailAndPassword(email, password);\r\n  return signInResult;\r\n}","import * as actions from \"./createAdminActions\";\r\nimport { createAdminWithEmailAndPassword } from \"@/api/createAdmin\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\n\r\nfunction* createAdmin({ payload }: ReturnType<typeof actions.createAdmin>) {\r\n  try {\r\n    yield call(createAdminWithEmailAndPassword, payload);\r\n    yield put(actions.createAdminSuccess());\r\n  } catch (err) {\r\n    yield put(actions.createAdminFailed(err))\r\n  }\r\n}\r\n\r\nexport function* createAdminSaga() {\r\n  yield takeEvery(actions.createAdmin.type, createAdmin);\r\n}","import * as actions from \"./userLoginActions\";\r\nimport { createReducer, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ntype UserState = {\r\n  userisLogging: boolean;\r\n  userLoinError: any;\r\n}\r\n\r\nconst userState: UserState = {\r\n  userisLogging: false,\r\n  userLoinError: null\r\n}\r\n\r\nexport const userLoginReducer = createReducer<UserState>(userState, {\r\n  [actions.userLoggedIn.type]: (state) => {\r\n    state.userisLogging = true;\r\n    state.userLoinError = null;\r\n  },\r\n  [actions.userLoggedInSuccess.type]: (state) => {\r\n    state.userisLogging = false;\r\n    state.userLoinError = null;\r\n  },\r\n  [actions.userLoggedInFailed.type]: (state, { payload }: PayloadAction<any>) => {\r\n    state.userisLogging = false;\r\n    state.userLoinError = payload;\r\n  }\r\n});","import { auth } from \"@/fbConfig\";\r\n\r\nexport const loginAdminWithEmailAndPassword = async (credentials: UserCredentials) => {\r\n  const { email, password } = credentials;\r\n\r\n  const signInResult = await auth.signInWithEmailAndPassword(email, password);\r\n  return signInResult;\r\n}","import * as actions from \"./userLoginActions\";\r\nimport { loginAdminWithEmailAndPassword } from \"@/api/login\";\r\nimport { takeEvery, call, put } from \"redux-saga/effects\";\r\n\r\nfunction* logInUser({ payload }: ReturnType<typeof actions.userLoggedIn>) {\r\n  try {\r\n    yield call(loginAdminWithEmailAndPassword, payload);\r\n    yield put(actions.userLoggedInSuccess());\r\n  } catch (err) {\r\n    yield put(actions.userLoggedInFailed(err))\r\n  }\r\n}\r\n\r\nexport function* userLoginSaga() {\r\n  yield takeEvery(actions.userLoggedIn, logInUser);\r\n}","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const authChange = createAction<any>(\"AUTH_SUCCESS\");\r\n\r\n// export const authChangeChecking = createAction(\"AUTH_CHECKING\");","import { authChange } from \"./authStateActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { User } from \"firebase\";\r\n\r\ntype AuthState = {\r\n  user: User | null;\r\n  isChecking: boolean;\r\n};\r\n\r\nconst authState: AuthState = {\r\n  user: null,\r\n  isChecking: true\r\n};\r\n\r\nexport const authStateReducer = createReducer(authState, {\r\n  [authChange.type]: (state, { payload }: any) => {\r\n    state.user = payload;\r\n    state.isChecking = false\r\n  }\r\n});","import { eventChannel } from \"redux-saga\";\r\nimport { call, put, take } from \"redux-saga/effects\";\r\nimport { auth } from \"@/fbConfig\";\r\nimport { authChange } from \"./authStateActions\";\r\n\r\n\r\nfunction getAuthChannel() {\r\n  let authChannel = eventChannel(emit => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        user.getIdTokenResult().then(idTokenResult => {\r\n          (user as any).admin = idTokenResult.claims.admin;\r\n          emit({ user });\r\n        });\r\n      } else {\r\n        emit({ user })\r\n      }\r\n      \r\n      \r\n    });\r\n    return unsubscribe;\r\n  });\r\n\r\n  return authChannel;\r\n}\r\n\r\nexport function* watchForFirebaseAuth() {\r\n  \r\n  const channel = yield call(getAuthChannel);\r\n\r\n  while (true) {\r\n    const result = yield take(channel);\r\n    \r\n    yield put(authChange(result.user));\r\n  }\r\n}","import { eventChannel } from \"redux-saga\";\r\n// import { call, put, take } from \"redux-saga/effects\";\r\nimport { db, auth } from \"@/fbConfig\";\r\nimport { take, call, put, cancel, cancelled, fork } from \"redux-saga/effects\";\r\nimport {\r\n  subscribeUC,\r\n  unsubscrUC,\r\n  recieveUCData\r\n} from \"./usersActions\";\r\n\r\nfunction getSnapshotChannell() {\r\n  return eventChannel((emitter) => {\r\n    return db.collection('users').where(\"createdBy\", \"==\", auth.currentUser?.uid).onSnapshot((snapshot) => {\r\n      const posts = snapshot.docs.map<IUsersData>(doc => {\r\n        return {\r\n          ...doc.data(),\r\n          id: doc.id\r\n        } as IUsersData\r\n      });\r\n\r\n      emitter(posts);\r\n    });\r\n  });\r\n}\r\n\r\nfunction* uCSync() {\r\n  const subscription = yield call(getSnapshotChannell);\r\n\r\n  try {\r\n    while (true) {\r\n      const result = yield take(subscription);\r\n      yield put(recieveUCData(result));\r\n    }\r\n  } finally {\r\n    if (yield cancelled()) {\r\n      subscription.close();\r\n    }\r\n  }\r\n}\r\n\r\nexport function* watchUsersSnapshot() {\r\n  while (yield take(subscribeUC.type)) {\r\n    const uCSyncTask = yield fork(uCSync);\r\n    yield take(unsubscrUC.type);\r\n    yield cancel(uCSyncTask);\r\n  }\r\n}","import { createReducer, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport {\r\n  recieveUCData\r\n} from \"./usersActions\";\r\n\r\nexport const usersReducer = createReducer<IUsersData[]>([], {\r\n  [recieveUCData.type]: (_, { payload }: PayloadAction<IUsersData[]>) => {\r\n    return payload;\r\n  }\r\n});","import { db } from \"@/fbConfig\";\r\n\r\nexport const sendTest = async ({ dataToSend, uid }: ISendTestData) => {\r\n  return await db.collection(`users/${uid}/tests`).add(dataToSend);\r\n}","import {\r\n  sendTestStart,\r\n  sendTestSuccess,\r\n  sendTestErr,\r\n} from \"./passTestActions\";\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { sendTest } from \"@/api/sendTest\";\r\n\r\nfunction* sendTestData({ payload }: ReturnType<typeof sendTestStart>) {\r\n  try {\r\n    yield call(sendTest, payload);\r\n    \r\n    yield put(sendTestSuccess());\r\n  } catch (e) {\r\n    yield put(sendTestErr(e));\r\n  }\r\n}\r\n\r\nexport function* watchSendTest() {\r\n  yield takeLatest(sendTestStart.type, sendTestData);\r\n}","import {\r\n  sendTestStart,\r\n  sendTestSuccess,\r\n  sendTestErr,\r\n  sendTestClearStatus,\r\n} from \"./passTestActions\";\r\nimport { createReducer, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nconst sendTestState = {\r\n  inProgress: false,\r\n  status: \"\",\r\n  error: null\r\n}\r\n\r\nexport const passTestReducer = createReducer<{\r\n  inProgress: boolean;\r\n  status: string;\r\n  error: null | Error;\r\n}>(sendTestState, {\r\n  [sendTestStart.type]: (state) => {\r\n    state.inProgress = true;\r\n    state.status = \"\";\r\n    state.error = null;\r\n  },\r\n  [sendTestSuccess.type]: (state) => {\r\n    state.inProgress = false;\r\n    state.status = \"ok\";\r\n  },\r\n  [sendTestErr.type]: (state, { payload }: PayloadAction<Error>) => {\r\n    state.inProgress = false;\r\n    state.status = \"\";\r\n    state.error = payload;\r\n  },\r\n  [sendTestClearStatus.type]: (state) => {\r\n    state.status = \"\";\r\n  }\r\n});","import {\r\n  getTestsStart,\r\n  getTestsSuccess,\r\n  getTestsError\r\n} from \"./getTestsACctions\";\r\n\r\nimport { createReducer, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface IGetTestsState {\r\n  isRequesting: boolean;\r\n  testsReqData: ITestData[] | null;\r\n  error: Error | null;\r\n}\r\n\r\nconst getTestsState = {\r\n  isRequesting: false,\r\n  testsReqData: null,\r\n  error: null\r\n}\r\n\r\nexport const getTestsReducer = createReducer<IGetTestsState>(getTestsState, {\r\n  [getTestsStart.type]: (state) => {\r\n    state.isRequesting = true;\r\n    state.testsReqData = null;\r\n    state.error = null;\r\n  },\r\n  [getTestsSuccess.type]: (state, { payload }: PayloadAction<ITestData[]>) => {\r\n    state.isRequesting = false;\r\n    state.testsReqData = payload;\r\n    state.error = null;\r\n  },\r\n  [getTestsError.type]: (state, { payload }: PayloadAction<Error>) => {\r\n    state.isRequesting = false;\r\n    state.testsReqData = null;\r\n    state.error = payload;\r\n  }\r\n});","import { db } from \"@/fbConfig\";\r\n\r\nexport const getUserTests = async (uid: string) => {\r\n  const response = await db.collection(`users/${uid}/tests`).get();\r\n  return response.docs.map(doc => doc.data());\r\n}","import {\r\n  getTestsStart,\r\n  getTestsSuccess,\r\n  getTestsError\r\n} from \"./getTestsACctions\";\r\n\r\nimport { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport { getUserTests } from \"@/api/getUserTests\";\r\n\r\nfunction* getTests({ payload }: ReturnType<typeof getTestsStart>) {\r\n  try {\r\n    const response = yield call(getUserTests, payload);\r\n    \r\n    yield put(getTestsSuccess(response));\r\n  } catch (e) {\r\n    yield put(getTestsError(e));\r\n  }\r\n}\r\n\r\nexport function* watchGetTests() {\r\n  yield takeLatest(getTestsStart.type, getTests);\r\n}","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { fork } from \"redux-saga/effects\";\r\n\r\nimport { createAdminReducer } from \"./createAdmin/createAdminReducer\";\r\nimport { createAdminSaga } from \"./createAdmin/createAdminSagas\";\r\nimport { userLoginReducer } from \"./userLogin/userLoginReducer\";\r\nimport { userLoginSaga } from \"./userLogin/userLoginSaga\";\r\nimport { authStateReducer } from \"./authState/authStateReducer\";\r\nimport { watchForFirebaseAuth } from \"./authState/autStateSaga\";\r\nimport { watchUsersSnapshot } from \"./users/usersSaga\";\r\nimport { usersReducer } from \"./users/usersReducer\";\r\n\r\nimport { watchSendTest, passTestReducer } from \"./passTest\";\r\nimport { getTestsReducer, watchGetTests } from \"./getTests\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nfunction* rootSaga() {\r\n  yield fork(watchForFirebaseAuth);\r\n  yield fork(createAdminSaga);\r\n  yield fork(userLoginSaga);\r\n  yield fork(watchUsersSnapshot);\r\n  yield fork(watchSendTest);\r\n  yield fork(watchGetTests);\r\n}\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    createAdmin: createAdminReducer,\r\n    userLogin: userLoginReducer,\r\n    user: authStateReducer,\r\n    users: usersReducer,\r\n    passTest: passTestReducer,\r\n    userTests: getTestsReducer\r\n  },\r\n  middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport type PsyTestsState = ReturnType<typeof store.getState>;\r\n","import React from 'react';\nimport { CssBaseline  } from \"@material-ui/core\";\nimport { Entry } from \"@/Containers/Entry/Entry\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"@/rdx/store\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <CssBaseline />\n        <Entry />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}